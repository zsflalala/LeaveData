import json
import httpx
import requests
import datetime
from lxml import etree
from loguru import logger
from html import unescape
from urllib.parse import urljoin
from w3lib.html import remove_comments
import concurrent.futures
from concurrent.futures import ThreadPoolExecutor


@logger.catch
def get_page_source(url,title,xpath_list,time_xpath,needtime):
    author,content,html_content,images,times,next_url,isError,ErrorName = '','','',[],'',url,0,''
    try:
        resp = httpx.get(url=url,headers=headers)
        resp.encoding = 'utf-8'
    except Exception as e:
        logger.error(f'{e}: {url}')
        isError,ErrorName = 1,str(e)
        return author,title,content,html_content,images,times,next_url,isError,ErrorName
    if resp.status_code != 200:
        logger.error(f'RespError :{resp.status_code} , {url}')
        isError,ErrorName = 1,'RespError'
        return author,title,content,html_content,images,times,next_url,isError,ErrorName
    else:
        resp_text = remove_comments(resp.text)
        tree = etree.HTML(resp_text)
    
    if title == '':
        try:
            title = tree.xpath('.//title[1]/text()')[0].strip()
        except IndexError:
            try:
                title = tree.xpath('.//h1[1]/text()')[0].strip()
            except:
                logger.error(f'TitleError: {url}')
                isError,ErrorName = 1,'TitleError'
                return author,title,content,html_content,images,times,next_url,isError,ErrorName
    # 解决文章发布时间
    if needtime:
        try:
            times = tree.xpath(time_xpath)
            times = ''.join([item.strip() for item in times if item.strip()])
        except:
            times = ''
            logger.warning(f'TimesWarning : {url}')
    # 作者
    try:
        author = tree.xpath('.//div[@class="author"]/span/a/text()')[0]
    except:
        author = ''
    for xpath in xpath_list:
        dupi_flag = 0
        img_tree = tree.xpath(xpath + '//img')
        for img in img_tree:
            if bool(img.xpath('./@src')) and urljoin(url,img.xpath('./@src')[0]) != url:
                images.append(urljoin(url,img.xpath('./@src')[0]))
        text = tree.xpath(xpath+'//text()')
        text = '\n'.join([item for item in text])
        no_tag_list = ['//script','//style','//noscript','//iframe','//svg','//button']
        for no_tag in no_tag_list:
            no_tag_tree = tree.xpath(xpath+no_tag)
            for tag in no_tag_tree:
                tag_text = tag.xpath('.//text()')
                tag_text = ''.join([item for item in tag_text])
                text = text.replace(tag_text,'')
        if text not in content:
            content += text
        else:
            dupi_flag = 1
        if bool(tree.xpath(xpath)) and not dupi_flag:
            html_content += unescape(etree.tostring(tree.xpath(xpath)[0],encoding='utf-8').decode())
    images = list(set(images))
    if bool(html_content) and bool(times):
        return author,title,content,html_content,images,times,next_url,isError,ErrorName
    else:
        logger.error(f'Invalidxpath : {url}')
        isError,ErrorName = 1,'Invalidxpath'
        return author,title,content,html_content,images,times,next_url,isError,ErrorName
    
def form_data(author,title,content,html_content,images,times,next_url):
    result = {}
    result['author'] = author
    result['title'] = title
    result['content'] = content
    result['html'] = html_content
    result['images'] = images
    result['insert_time'] = str(datetime.datetime.now())
    result['pubtime'] = times
    result['url'] = next_url
    return result

def getContentStreamUrls(json_data,urls):
    response = requests.post('https://scorpia.graphql.aspire-ebm.com/', headers=headers, json=json_data).json()
    edges = response['data']['getContentStream']['edges']
    if bool(edges):
        for edge in edges:
            edge_url = urljoin(url,edge['node']['siteContext']['path'])
            if edge_url not in urls:
                urls.append(edge_url)
            # logger.info('{} ==> {}',edge['node']['name'], edge['node']['id'])
            last_length = len(json_data['variables']['excludeContentIds'])
            json_data['variables']['excludeContentIds'].append(edge['node']['id'])
            json_data['variables']['excludeContentIds'] = list(set(json_data['variables']['excludeContentIds']))
            now_length = len(json_data['variables']['excludeContentIds'])
            if last_length == now_length:
                return True
        return False
    else:
        logger.warning(f'EdgesWarning : {edges}')
        return True

def getKindsUrls(json_data,urls,kind_name):
    flag = 0
    while not flag:
        flag = getContentStreamUrls(json_data,urls)
        logger.info('{} now url length : {}',kind_name,len(urls))
    logger.info('{} : {}',kind_name,len(urls))
    return

if __name__ == '__main__':
    logger.add('controldesignv2_{time}.log')
    final_dic = {'pro':[]}
    headers = {
        'authority': 'scorpia.graphql.aspire-ebm.com',
        'accept': '*/*',
        'accept-language': 'zh-CN,zh;q=0.9',
        'content-type': 'application/json',
        'origin': 'https://www.controldesign.com',
        'referer': 'https://www.controldesign.com/',
        'sec-ch-ua': '"Google Chrome";v="119", "Chromium";v="119", "Not?A_Brand";v="24"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'cross-site',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
        'x-tenant-key': 'ebm_controldesign',
    }
    url = 'https://www.controldesign.com/magazine/62bdb091b5a892d0048b4569'
    urls = []

    json_data_plcspacs = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    # getKindsUrls(json_data_plcspacs,urls,'json_data_plcspacs')

    json_data_powersupplies = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_plcspacs['variables']['sectionId'] = 57898
    # getKindsUrls(json_data_powersupplies,urls,'json_data_powersupplies')

    json_data_technology = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_technology['variables']['sectionId'] = 57844
    # getKindsUrls(json_data_technology,urls,'json_data_technology')

    json_data_control_software = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_control_software['variables']['sectionId'] = 57862
    # getKindsUrls(json_data_control_software,urls,'json_data_control_software')

    json_data_cnc = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_cnc['variables']['sectionId'] = 57824
    # getKindsUrls(json_data_cnc,urls,'json_data_cnc')

    json_data_embedded_control = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_embedded_control['variables']['sectionId'] = 57880
    # getKindsUrls(json_data_embedded_control,urls,'json_data_embedded_control')

    json_data_industrial_pcs = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_industrial_pcs['variables']['sectionId'] = 57894
    # getKindsUrls(json_data_industrial_pcs,urls,'json_data_industrial_pcs')

    json_data_circuit_protection = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_circuit_protection['variables']['sectionId'] = 58035
    # getKindsUrls(json_data_circuit_protection,urls,'json_data_circuit_protection')

    json_data_enclosures = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_enclosures['variables']['sectionId'] = 57864
    # getKindsUrls(json_data_enclosures,urls,'json_data_enclosures')

    json_data_relays = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_relays['variables']['sectionId'] = 57962
    # getKindsUrls(json_data_relays,urls,'json_data_relays')

    json_data_cad_software = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_cad_software['variables']['sectionId'] = 57973
    # getKindsUrls(json_data_cad_software,urls,'json_data_cad_software')

    json_data_development_platforms = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_development_platforms['variables']['sectionId'] = 57815
    # getKindsUrls(json_data_development_platforms,urls,'json_data_development_platforms')

    json_data_edge_technology = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_edge_technology['variables']['sectionId'] = 57844
    # getKindsUrls(json_data_edge_technology,urls,'json_data_edge_technology')

    json_data_io = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_io['variables']['sectionId'] = 57833
    # getKindsUrls(json_data_io,urls,'json_data_io')

    json_data_connectors = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_connectors['variables']['sectionId'] = 57970
    # getKindsUrls(json_data_connectors,urls,'json_data_connectors')

    json_data_cybersecurity = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_cybersecurity['variables']['sectionId'] = 57809
    # getKindsUrls(json_data_cybersecurity,urls,'json_data_cybersecurity')

    json_data_data_acquisition_monitoring = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_data_acquisition_monitoring['variables']['sectionId'] = 57791
    # getKindsUrls(json_data_data_acquisition_monitoring,urls,'json_data_data_acquisition_monitoring')

    json_data_cloudtechnology = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_cloudtechnology['variables']['sectionId'] = 57858
    # getKindsUrls(json_data_cloudtechnology,urls,'json_data_cloudtechnology')

    json_data_switches_gateways = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_switches_gateways['variables']['sectionId'] = 57971
    # getKindsUrls(json_data_switches_gateways,urls,'json_data_switches_gateways')

    json_data_remoteconnectivity = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_remoteconnectivity['variables']['sectionId'] = 57856
    # getKindsUrls(json_data_remoteconnectivity,urls,'json_data_remoteconnectivity')

    json_data_terminalblocks = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_terminalblocks['variables']['sectionId'] = 57831
    # getKindsUrls(json_data_terminalblocks,urls,'json_data_terminalblocks')

    json_data_cablewire = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_cablewire['variables']['sectionId'] = 57954
    # getKindsUrls(json_data_cablewire,urls,'json_data_cablewire')

    json_data_time_sensitive_networking = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_time_sensitive_networking['variables']['sectionId'] = 57900
    # getKindsUrls(json_data_time_sensitive_networking,urls,'json_data_time_sensitive_networking')

    json_data_motors = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_motors['variables']['sectionId'] = 57770
    # getKindsUrls(json_data_motors,urls,'json_data_motors')

    json_data_drives = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_drives['variables']['sectionId'] = 57930
    # getKindsUrls(json_data_drives,urls,'json_data_drives')

    json_data_pneumatics = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_pneumatics['variables']['sectionId'] = 57953
    # getKindsUrls(json_data_pneumatics,urls,'json_data_pneumatics')

    json_data_hydraulics = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_hydraulics['variables']['sectionId'] = 57911
    # getKindsUrls(json_data_hydraulics,urls,'json_data_hydraulics')

    json_data_electromechanical = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_electromechanical['variables']['sectionId'] = 57891
    # getKindsUrls(json_data_electromechanical,urls,'json_data_electromechanical')

    json_data_steppers = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_steppers['variables']['sectionId'] = 57852
    # getKindsUrls(json_data_steppers,urls,'json_data_steppers')

    json_data_motion_software = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_motion_software['variables']['sectionId'] = 58034
    # getKindsUrls(json_data_motion_software,urls,'json_data_motion_software')

    json_data_robotics = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_robotics['variables']['sectionId'] = 57804
    # getKindsUrls(json_data_robotics,urls,'json_data_robotics')

    json_data_sensors = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_sensors['variables']['sectionId'] = 57916
    # getKindsUrls(json_data_sensors,urls,'json_data_sensors')

    json_data_vision_systems = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_vision_systems['variables']['sectionId'] = 57997
    # getKindsUrls(json_data_vision_systems,urls,'json_data_vision_systems')

    json_data_presence_sensing = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_presence_sensing['variables']['sectionId'] = 57917
    # getKindsUrls(json_data_presence_sensing,urls,'json_data_presence_sensing')

    json_data_process_variables = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_process_variables['variables']['sectionId'] = 57946
    # getKindsUrls(json_data_process_variables,urls,'json_data_process_variables')

    json_data_linear_measurement = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_linear_measurement['variables']['sectionId'] = 57986
    # getKindsUrls(json_data_linear_measurement,urls,'json_data_linear_measurement')

    json_data_encoders = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_encoders['variables']['sectionId'] = 57766
    # getKindsUrls(json_data_encoders,urls,'json_data_encoders')

    json_data_rfid = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_rfid['variables']['sectionId'] = 57909
    # getKindsUrls(json_data_rfid,urls,'json_data_rfid')

    json_data_safety_components = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_safety_components['variables']['sectionId'] = 57882
    # getKindsUrls(json_data_safety_components,urls,'json_data_safety_components')

    json_data_machine_guarding = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_machine_guarding['variables']['sectionId'] = 57922
    # getKindsUrls(json_data_machine_guarding,urls,'json_data_machine_guarding')

    json_data_safety_controllers = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_safety_controllers['variables']['sectionId'] = 57999
    # getKindsUrls(json_data_safety_controllers,urls,'json_data_safety_controllers')

    json_data_intrinsic_safety = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_intrinsic_safety['variables']['sectionId'] = 58102
    # getKindsUrls(json_data_intrinsic_safety,urls,'json_data_intrinsic_safety')

    json_data_integrated_controlsafety = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_integrated_controlsafety['variables']['sectionId'] = 58037
    # getKindsUrls(json_data_integrated_controlsafety,urls,'json_data_integrated_controlsafety')

    json_data_functional_safety = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_functional_safety['variables']['sectionId'] = 58036
    # getKindsUrls(json_data_functional_safety,urls,'json_data_functional_safety')

    json_data_hmi = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_hmi['variables']['sectionId'] = 57846
    # getKindsUrls(json_data_hmi,urls,'json_data_hmi')

    json_data_panel_meters = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_panel_meters['variables']['sectionId'] = 58019
    # getKindsUrls(json_data_panel_meters,urls,'json_data_panel_meters')

    json_data_alarms = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_alarms['variables']['sectionId'] = 58078
    # getKindsUrls(json_data_alarms,urls,'json_data_alarms')

    json_data_stack_lights = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_stack_lights['variables']['sectionId'] = 57859
    # getKindsUrls(json_data_stack_lights,urls,'json_data_stack_lights')

    json_data_hmi_software = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_hmi_software['variables']['sectionId'] = 57987
    # getKindsUrls(json_data_hmi_software,urls,'json_data_hmi_software')

    json_data_mobile_interfaces = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_mobile_interfaces['variables']['sectionId'] = 58099
    # getKindsUrls(json_data_mobile_interfaces,urls,'json_data_mobile_interfaces')

    json_data_financials = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_financials['variables']['sectionId'] = 57769
    # getKindsUrls(json_data_financials,urls,'json_data_financials')

    json_data_vertical_industries = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_vertical_industries['variables']['sectionId'] = 57963
    # getKindsUrls(json_data_vertical_industries,urls,'json_data_vertical_industries')

    json_data_vendor_notes = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n','variables': {'limit': 50,'excludeContentIds': [],'sectionBubbling': True,'includeContentTypes': ['Article','Blog',                'MediaGallery','News','PressRelease','Product','Video','Webinar','Whitepaper',],'sortField': 'published','sortOrder': 'desc','requirePrimaryImage': False,'scheduleOption': 2,'sectionId': 57834,},}
    json_data_vendor_notes['variables']['sectionId'] = 58065
    # getKindsUrls(json_data_vendor_notes,urls,'json_data_vendor_notes')

    json_data_podcasts = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n',    'variables': {        'limit': 50,        'excludeContentIds': [        ],        'sectionBubbling': True,        'sortField': 'published',        'sortOrder': 'desc',        'requirePrimaryImage': False,        'sectionId': 57812,        'teaserFallback': True,        'teaserMaxLength': 175,    },}
    # getKindsUrls(json_data_podcasts,urls,'json_data_podcasts')

    json_data_product = json_data = {'query': 'query getContentStream(\n  $sectionId: Int\n  $limit: Int\n  $skip: Int\n  $includeContentTypes: [ContentType!]\n  $issueId: Int\n  $relatedToId: Int\n  $authorId: Int\n  $scheduleOption: Int\n  $requirePrimaryImage: Boolean\n  $excludeContentIds: [Int!]\n  $includeContentIds: [Int!]\n  $sectionBubbling: Boolean\n  $sortField: ContentSortField\n  $sortOrder: SortOrder\n  $publishedBefore: Date\n  $publishedAfter: Date\n  $randomizeResults: Boolean\n  $teaserFallback: Boolean\n  $teaserMaxLength: Int\n  $startDateBefore: Date\n  $startDateAfter: Date\n) {\n  getContentStream(\n    input: {\n      sectionId: $sectionId\n      includeContentTypes: $includeContentTypes\n      excludeContentIds: $excludeContentIds\n      includeContentIds: $includeContentIds\n      issueId: $issueId\n      authorId: $authorId\n      relatedTo: { id: $relatedToId }\n      scheduleOption: $scheduleOption\n      startDateBefore: $startDateBefore\n      startDateAfter: $startDateAfter\n      requirePrimaryImage: $requirePrimaryImage\n      sectionBubbling: $sectionBubbling\n      publishedBefore: $publishedBefore\n      publishedAfter: $publishedAfter\n      sort: { field: $sortField, order: $sortOrder }\n      pagination: { limit: $limit, skip: $skip }\n      randomizeResults: $randomizeResults\n    }\n  ) {\n    edges {\n      node {\n        id\n        type\n        name\n        shortName\n        teaser(input: { useFallback: $teaserFallback, maxLength: $teaserMaxLength })\n        published\n        publishedDate\n        labels\n        primaryImage {\n          name\n          src\n          credit\n          alt\n          isLogo\n          displayName\n        }\n        primarySection {\n          alias\n          name\n        }\n        siteContext {\n          path\n        }\n        company {\n          id\n          name\n          fullName\n          alias\n        }\n        userRegistration {\n          isRequired\n          accessLevels\n        }\n        ... on Authorable {\n          authors {\n            edges {\n              node {\n                name\n                path\n              }\n            }\n          }\n        }\n        ... on ContentEvent {\n          startDate\n          endDate\n        }\n        ... on ContentWebinar {\n          startDate\n        }\n        membership {\n          id\n        }\n      }\n    }\n  }\n}\n',    'variables': {        'limit': 50,        'excludeContentIds': [        ],        'sectionBubbling': True,        'includeContentTypes': [            'Product',        ],        'sortField': 'published',        'sortOrder': 'desc',        'requirePrimaryImage': False,        'teaserFallback': True,        'teaserMaxLength': 175,    },}
    # getKindsUrls(json_data_product,urls,'json_data_product')

    with ThreadPoolExecutor(max_workers=10) as executor:
        executor.submit(getKindsUrls,json_data_product,urls,'json_data_product')
        executor.submit(getKindsUrls,json_data_plcspacs,urls,'json_data_plcspacs')
        executor.submit(getKindsUrls,json_data_powersupplies,urls,'json_data_powersupplies')
        executor.submit(getKindsUrls,json_data_technology,urls,'json_data_technology')
        executor.submit(getKindsUrls,json_data_control_software,urls,'json_data_control_software')
        executor.submit(getKindsUrls,json_data_cnc,urls,'json_data_cnc')
        executor.submit(getKindsUrls,json_data_embedded_control,urls,'json_data_embedded_control')
        executor.submit(getKindsUrls,json_data_industrial_pcs,urls,'json_data_industrial_pcs')
        executor.submit(getKindsUrls,json_data_circuit_protection,urls,'json_data_circuit_protection')
        executor.submit(getKindsUrls,json_data_enclosures,urls,'json_data_enclosures')
        executor.submit(getKindsUrls,json_data_relays,urls,'json_data_relays')
        executor.submit(getKindsUrls,json_data_cad_software,urls,'json_data_cad_software')
        executor.submit(getKindsUrls,json_data_development_platforms,urls,'json_data_development_platforms')
        executor.submit(getKindsUrls,json_data_edge_technology,urls,'json_data_edge_technology')
        executor.submit(getKindsUrls,json_data_io,urls,'json_data_io')
        executor.submit(getKindsUrls,json_data_connectors,urls,'json_data_connectors')
        executor.submit(getKindsUrls,json_data_cybersecurity,urls,'json_data_cybersecurity')
        executor.submit(getKindsUrls,json_data_data_acquisition_monitoring,urls,'json_data_data_acquisition_monitoring')
        executor.submit(getKindsUrls,json_data_cloudtechnology,urls,'json_data_cloudtechnology')
        executor.submit(getKindsUrls,json_data_switches_gateways,urls,'json_data_switches_gateways')
        executor.submit(getKindsUrls,json_data_remoteconnectivity,urls,'json_data_remoteconnectivity')
        executor.submit(getKindsUrls,json_data_terminalblocks,urls,'json_data_terminalblocks')
        executor.submit(getKindsUrls,json_data_cablewire,urls,'json_data_cablewire')
        executor.submit(getKindsUrls,json_data_time_sensitive_networking,urls,'json_data_time_sensitive_networking')
        executor.submit(getKindsUrls,json_data_motors,urls,'json_data_motors')
        executor.submit(getKindsUrls,json_data_drives,urls,'json_data_drives')
        executor.submit(getKindsUrls,json_data_pneumatics,urls,'json_data_pneumatics')
        executor.submit(getKindsUrls,json_data_hydraulics,urls,'json_data_hydraulics')
        executor.submit(getKindsUrls,json_data_electromechanical,urls,'json_data_electromechanical')
        executor.submit(getKindsUrls,json_data_steppers,urls,'json_data_steppers')
        executor.submit(getKindsUrls,json_data_motion_software,urls,'json_data_motion_software')
        executor.submit(getKindsUrls,json_data_robotics,urls,'json_data_robotics')
        executor.submit(getKindsUrls,json_data_sensors,urls,'json_data_sensors')
        executor.submit(getKindsUrls,json_data_vision_systems,urls,'json_data_vision_systems')
        executor.submit(getKindsUrls,json_data_presence_sensing,urls,'json_data_presence_sensing')
        executor.submit(getKindsUrls,json_data_process_variables,urls,'json_data_process_variables')
        executor.submit(getKindsUrls,json_data_linear_measurement,urls,'json_data_linear_measurement')
        executor.submit(getKindsUrls,json_data_encoders,urls,'json_data_encoders')
        executor.submit(getKindsUrls,json_data_rfid,urls,'json_data_rfid')
        executor.submit(getKindsUrls,json_data_safety_components,urls,'json_data_safety_components')
        executor.submit(getKindsUrls,json_data_machine_guarding,urls,'json_data_machine_guarding')
        executor.submit(getKindsUrls,json_data_safety_controllers,urls,'json_data_safety_controllers')
        executor.submit(getKindsUrls,json_data_intrinsic_safety,urls,'json_data_intrinsic_safety')
        executor.submit(getKindsUrls,json_data_integrated_controlsafety,urls,'json_data_integrated_controlsafety')
        executor.submit(getKindsUrls,json_data_functional_safety,urls,'json_data_functional_safety')
        executor.submit(getKindsUrls,json_data_hmi,urls,'json_data_hmi')
        executor.submit(getKindsUrls,json_data_panel_meters,urls,'json_data_panel_meters')
        executor.submit(getKindsUrls,json_data_alarms,urls,'json_data_alarms')
        executor.submit(getKindsUrls,json_data_stack_lights,urls,'json_data_stack_lights')
        executor.submit(getKindsUrls,json_data_hmi_software,urls,'json_data_hmi_software')
        executor.submit(getKindsUrls,json_data_mobile_interfaces,urls,'json_data_mobile_interfaces')
        executor.submit(getKindsUrls,json_data_financials,urls,'json_data_financials')
        executor.submit(getKindsUrls,json_data_vertical_industries,urls,'json_data_vertical_industries')
        executor.submit(getKindsUrls,json_data_vendor_notes,urls,'json_data_vendor_notes')
        executor.submit(getKindsUrls,json_data_podcasts,urls,'json_data_podcasts')

    other_urls = ['https://www.controldesign.com/vendors/products','https://www.controldesign.com/podcasts','https://www.controldesign.com/webinars']
    for other_url in other_urls:
        resp = requests.get(url=other_url,headers=headers)
        resp.encoding = 'utf-8'
        tree = etree.HTML(resp.text)
        a_list = tree.xpath('.//div[@class="item small"]//a')
        for a in a_list:
            urls.append(urljoin(url,a.xpath('./@href')[0]))
    urls = list(set(urls))
    logger.info(f'UrlLength {len(urls)}')


    xpath_list = [
            '//div[@class="web-body-blocks page-contents__content-body"]//div[@class="html" or @class="text"]',
            # '//div[@class="web-body-blocks page-contents__content-body"]/div[@class="block text"]',
            # '//*[@id="__nuxt"]/div/div/div/div/div/div[3]/div[1]/div/div/div/div[2]/div/div[2]/div/div[1]/div/div/div[1]/div[3]/div/div/div/div[4]',
            # '//*[@id="__nuxt"]/div/div/div/div/div/div[3]/div[1]/div/div/div/div[2]/div/div[3]/div/div[1]/div/div/div[1]/div[2]/div/div/div/div[4]/div[1]/div[2]/section',
            # '//*[@id="__nuxt"]/div/div/div/div/div/div[3]/div[1]/div/div/div/div[2]/div/div[2]/div/div/div/div/div[1]/div[2]/div/div/div/div[4]/div[1]/div[2]/section',
        ]
    time_xpath,needtime = './/div[@class="date-wrapper"]//text()',True
    count = 5
    while len(urls) and count:
        if count != 5:
            logger.info('====== deal timed out urls {}======',len(urls))
        with ThreadPoolExecutor(max_workers=10) as executor:
            to_do = []
            for url in urls:
                to_do.append(executor.submit(get_page_source,url,'',xpath_list,time_xpath,needtime))
            for future in concurrent.futures.as_completed(to_do):
                author,title,content,html_content,images,times,next_url,isError,ErrorName = future.result()
                if not isError:
                    try:
                        del urls[urls.index(next_url)]
                        solu_dic = form_data(author,title,content,html_content,images,times,next_url)
                        final_dic['pro'].append(solu_dic)
                        logger.success('{}==>{}',title,times)
                    except:
                        logger.warning(f'NoUrlsWarning : {next_url}')
                elif ErrorName == 'RespError :301 ' or ErrorName == 'Invalidxpath':
                    del urls[urls.index(next_url)]
            count -= 1

    filename,dic = f'controldesignv2_{len(final_dic["pro"])}.json',final_dic
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(dic, f, indent=2, sort_keys=False, ensure_ascii=False)  # 写为多行
    logger.info(f'爬取完成，存储在{filename}中.')
